{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["recognition","window","webkitSpeechRecognition","speechSynthesis","getVoices","App","useState","botnvoice","setBotnvoice","botresponse","setBotresponse","start_speech","lang","start","speakup","text","final","msg","SpeechSynthesisUtterance","voices","voice","rate","pitch","onend","e","console","log","elapsedTime","speak","useEffect","continuous","interimResults","counter","onstart","onresult","event","results","i","resultIndex","length","bina","transcript","split","map","char","charCodeAt","toString","join","indexOf","stop","tarik","replace","onerror","setTimeout","className","style","id","alt","src","width","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7e5bf9d.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nconst recognition = new window.webkitSpeechRecognition();\nwindow.speechSynthesis.getVoices();\nfunction App() {\n  const [botnvoice, setBotnvoice] = useState(true);\n  const [botresponse, setBotresponse] = useState('');\n\n  const startVoiceBot = () => {\n    setBotresponse(\"\");\n    speakup(\"dus tarik ko apka e m i bank account se kateyga.\", 1);\n    setTimeout(() => {\n      speakup(\"toh kya abhi apke account mein paanch hazar rupay available hai\", 0);\n    }, 1000);\n  }\n\n  const text2Binary = (string) => {\n    return string.split('').map(function (char) {\n      return char.charCodeAt(0).toString(2);\n    }).join(' ');\n  }\n\n  const start_speech = () => {\n    recognition.lang = 'hi-IN';\n    recognition.start();\n    setBotnvoice(false);\n  }\n\n  const speakup = (text, final) => {\n    const msg = new window.SpeechSynthesisUtterance();\n    const voices = window.speechSynthesis.getVoices();\n    msg.voice = voices[7];\n    msg.rate = 1;\n    msg.pitch = 1;\n    msg.text = text;\n\n    msg.onend = function (e) {\n      console.log('Finished in ' + e.elapsedTime + ' seconds.');\n      if (final === 0) {\n        start_speech();\n      }\n    };\n    window.speechSynthesis.speak(msg);\n  }\n\n  useEffect(() => {\n    recognition.continuous = true;\n    recognition.interimResults = true;\n\n    let counter = 0;\n    recognition.onstart = function () {\n      console.log(\"Recognition started\");\n      counter = 0;\n      setBotresponse(\"\");\n    };\n\n    recognition.onresult = function (event) {\n      console.log(event.results);\n      for (var i = event.resultIndex; i < event.results.length; ++i) {\n        let bina = text2Binary(event.results[i][0].transcript);\n\n        if ((bina).indexOf('100100111001 100100111110 100100000010') !== -1) {\n          console.log('Yes -- got it')\n          recognition.stop();\n          if (counter === 0) {\n            setBotresponse(\"Yes, EMI is avaliable\")\n            speakup(\"Jaankari kay liye Dnyawad\", 1);\n            speakup(\"aapka din shubh rahe\", 1);\n            counter++;\n          }\n        }\n        if ((bina).indexOf('100100101000 100100111001 100101000000 100100000010') !== -1) {\n          console.log('No -- got it')\n          recognition.stop();\n          if (counter === 0) {\n            setBotresponse(\"No, EMI is not avaliable\");\n            speakup(\"Jaankari kay liye Dnyawad\", 1);\n            speakup(\"App kab tak E M I bhar paa yen gay, krupiyaa taarik bata e yay\", 0);\n            counter++;\n          }\n        }\n        if ((bina).indexOf('100000 100100100100 100100111110 100100110000 100101000000 100100010110') !== -1) {\n          const tarik = (event.results[i][0].transcript).replace(/[^0-9.]/g, '');\n          console.log(tarik, \"traik - got it\");\n          setBotresponse(\"EMI will be avaliable till \" + tarik + \" of this month\");\n\n          recognition.stop();\n          if (counter === 0) {\n            speakup(\"Jaankari kay liye Dnyawad\", 1);\n            speakup(\"aapka din shubh rahe\", 1);\n            counter++;\n          }\n        }\n      }\n    };\n    recognition.onerror = function (e) {\n      console.log(e);\n      setTimeout(() => {\n        start_speech()\n      }, 700)\n    };\n\n    recognition.onend = function () {\n      console.log(\"Speech recognition ended\");\n      setBotnvoice(true);\n    };\n  }, [])\n\n\n  return (\n    <div className=\"App\">\n\n      <div className=\"headermain\">\n        <h3 className=\"headervoice\">Hindi Voice Bot by Colossus Nexus</h3>\n        Bot Data: <b><i>{botresponse}</i></b>\n      </div>\n\n      <div className=\"container\">\n\n        <div style={{ \"display\": botnvoice ? \"none\" : \"block\", \"textAlign\": \"center\" }}>\n          <button id=\"speech\" className=\"btn\">\n            <img className=\"v-img\" alt=\"listerning\" src=\"mic.svg\" width=\"50px\" />\n            <div className=\"pulse-ring\"></div>\n          </button>\n          <br />\n          <div style={{ \"marginTop\": \"12px\", \"color\": \"#fff\" }}>Listening...</div>\n        </div>\n        <div style={{ \"display\": botnvoice ? \"block\" : \"none\", \"textAlign\": \"center\" }}>\n          <button onClick={() => startVoiceBot(false)} id=\"clickme\" className=\"hvr-pulse\">\n            <img className=\"v-img\" alt=\"bot\" src=\"bot.svg\" width=\"120px\" />\n          </button>\n          <br />\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}